{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyPgtPnm0CtRV92hGCM+t0Lu",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/AngJohnGabriel/58003-OOP/blob/main/My%20first%20repository\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Introduction to Phyton Fundamentals"
      ],
      "metadata": {
        "id": "VUjJTJVcVfBX"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Phyton Indentation\n",
        "if 5>2:\n",
        "  print(\"5 is greater than 2\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qZiBkwiaVecu",
        "outputId": "5b2002b8-b8d6-4dc3-b8a0-2cb0a0e1a219"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "5 is greater than 2\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "3mxJ4fdlVQMU",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "9d1b75b6-e168-45c0-b432-3f6a8975c225"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "5 is greater than 2\n"
          ]
        }
      ],
      "source": [
        "#Declaration of Variable\n",
        "z=5\n",
        "y=2\n",
        "if z>y:\n",
        "  print(\"5 is greater than 2\")\n",
        "elif z<y:\n",
        "  print(\"2 is greater than 5\")"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Phyton Variable\n",
        "a,b,c=0, 1, 2 \n",
        "print(a,b,c)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "MxeRvrJTv6c2",
        "outputId": "408b11de-45ac-4d84-8d69-b8ba6c4ea771"
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0 1 2\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#single variable with multiple values\n",
        "a=b=c=4.5\n",
        "print(a)\n",
        "print(b)\n",
        "print(c)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_LFy6QCLwW69",
        "outputId": "6ae2c9fe-5f01-45a8-fc0e-e1663560973a"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "4.5\n",
            "4.5\n",
            "4.5\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(type (a))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "n18PiOzTwlke",
        "outputId": "721450ec-fc35-46dd-be4c-20ff6014ced4"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'float'>\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#string output using double quote or single quote\n",
        "X=\"Gabriel Ang\"\n",
        "print(X)\n",
        "y='Gabriel Ang'\n",
        "print(y)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LWniroepwsRt",
        "outputId": "c28dc275-8d84-47bb-b014-ede4507541db"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Gabriel Ang\n",
            "Gabriel Ang\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Output Variables\n",
        "x='enjoying'\n",
        "print(\"Phyton programming is \" + x  )"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Vtkh4TE3xR0m",
        "outputId": "bc4c6152-aa55-4e37-cff5-027e71352b7b"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Phyton programming is enjoying\n"
          ]
        }
      ]
    }
  ]
}